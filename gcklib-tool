#!/bin/sh

prog_name=$(basename "$0")
tool_version="beta"
year=2025

lib="lib"
gcklib="$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)/lib"

fatal() {
    echo "fatal: $*" >&2
    exit 1
}

usage() {
    cat <<EOF
Usage: $prog_name [OPTION]...

      --help       print this help and exit.
      --version    print version information.
      --list       print available modules.
      --import     import named module into current package.
      --update     update packages in your current gcklib.
      --remove     remove a package from current package.
EOF
}

print_version() {
    cat <<EOF
$prog_name $tool_version $(git rev-list --count --all 2>/dev/null || echo 0)
Copyright (C) $year GCK.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
EOF
}

list() {
    ls -1 "modules/"
}

visited=""

visit() {
    module=$1
    case " $visited " in
        *" $module "*) return ;;
    esac
    visited="$visited $module"

    dep_file="modules/$module"
    if [ -f "$dep_file" ]; then
        while IFS= read -r entry; do
            entry=$(echo "$entry" | xargs)
            [ -n "$entry" ] && visit "$entry"
        done < "$dep_file"
    fi
}

import() {
    mkdir ../lib
    module=$(echo "$1" | xargs)
    [ -z "$module" ] && fatal "no module given to import"

    visited=""
    visit "$module"
    set -- $visited

    for mod in "$@"; do
        for ext in h c; do
            src="$gcklib/${mod}.${ext}"
            dst="../$lib/${mod}.${ext}"
            [ -f "$src" ] || fatal "missing $ext for $mod"
            cp "$src" "$dst"
        done
    done
}

remove() {
    module=$(echo "$1" | xargs)
    [ -z "$module" ] && fatal "no module given to remove"
    rm -f "../$lib/${module}.h" "../$lib/${module}.c"
}

update() {
    if [ $# -eq 0 ]; then
        for f in lib/*.c; do
            m=$(basename "$f" .c)
            update "$m"
        done
        return
    fi

    module=$(echo "$1" | xargs)
    for ext in c h; do
        src="lib/${module}.${ext}"
        dst="../lib/${module}.${ext}"
        if [ -f "$src" ]; then
            if [ ! -f "$dst" ] || [ "$(stat -c %Y "$src")" -gt "$(stat -c %Y "$dst")" ]; then
                cp "$src" "$dst"
            fi
        fi
    done
}

[ ! -f "./lib" ] || fatal "run this in the parent package directory"

while [ $# -gt 0 ]; do
    case "$1" in
        --help) usage; exit 0 ;;
        --version) print_version; exit 0 ;;
        --list) list; exit 0 ;;
        --import=*) import "${1#--import=}" ;;
        --import)
            shift
            [ $# -gt 0 ] || fatal "missing argument for --import"
            import "$1"
            ;;
        --remove=*) remove "${1#--remove=}" ;;
        --remove)
            shift
            [ $# -gt 0 ] || fatal "missing argument for --remove"
            remove "$1"
            ;;
        --update=*) update "${1#--update=}" ;;
        --update)
            shift
            [ $# -gt 0 ] || { update; shift; continue; }
            update "$1"
            ;;
        *)
            fatal "unrecognized option $1"
            ;;
    esac
    shift
done
