#!/bin/sh

prog_name=$0
version="beta"
year=2025

fatal() {
	echo "fatal: $*" >&2
	exit 1
}

usage() {
	cat <<EOF
Usage: $prog_name [OPTION]...

      --help     print this help and exit.
      --version  print version information.
      --list     print avaliable modules.
      --import   import named module into current package.
      --update   update packages in your current gcklib.
	  --remove   remove a package from current package.

EOF
}

version() {
	cat <<EOF
$prog_name $version $(git rev-list --count --all)
Copyright (C) $year GCK.
This is free software: you are free to change and redistribute it.
There is NO WARRNTY, to the extent permitted by law.
EOF
}

list() {
	ls lib | grep ".c" | cut -d. -f1
}

import() {
	local module=$1
	module=$($module | xargs)
	cp lib/${module}.h ../lib/
	cp lib/${nodule}.c ../lib/
}

remove() {
	local module=$1
	module=$($module | xargs)
	rm ../lib/${module}.h ../lib/${module}.c
}

update() {
	local module=$1
	module=$($module | xargs)

	if [ $# -eq 0 ]; then
		for f in lib/*; do
			update $f
		done
	else
		if [ stat -c "%Y" ../lib/${module}.c -lt stat -c "%Y" lib/${module}.c ]; then
			cp lib/${module}.c ../lib/{module}.c
		fi
		if [ stat -c "%Y" ../lib/${module}.h -lt stat -c "%Y" lib/${module}.h ]; then
			cp lib/${module}.h ../lib/{module}.h
		fi
	fi
}

[ ! -f "./gcklib-tool" ] && fatal run this in the gcklib directory.

for arg; do
case "$arg" in
--help) usage ;;
--version) version ;;
--list) list ;;
--import) import ${arg#*} ;;
--update) echo "TODO" ;;
*) printf "Unrecognized option %s\n" "$arg" ;;
esac
done
